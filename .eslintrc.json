{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "prettier"
  ],
  "plugins": [
    "@typescript-eslint",
    "@typescript-eslint/tslint",
    "import"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".ts",
          ".tsx",
          ".js",
          ".jsx",
          ".json"
        ],
      },
      "typescript": {
        "alwaysTryTypes": true
      }
    },
    "propWrapperFunctions": [
      "forbidExtraProps",
      "exact",
      "Object.freeze"
    ],
    "import/extensions": [
      ".ts",
      ".tsx",
      ".js",
      ".mjs",
      ".jsx"
    ],
    "import/core-modules": [],
    "import/ignore": [
      "node_modules",
      "\\.(coffee|scss|css|less|hbs|svg|json)$"
    ]
  },
  "env": {
    "es6": true,
    "node": true,
    "mocha": true
  },
  "ignorePatterns": [
    "**/*.js",
    "node_modules",
    "__snapshots__"
  ],
  "rules": {
    "indent": "warn",
    "@typescript-eslint/indent": [
      "error",
      2
    ],
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/consistent-type-assertions": "off",
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        }
      }
    ],
    "arrow-parens": [
      "off",
      "as-needed"
    ],
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "camelcase": "off",
    "curly": [
      "error",
      "multi-line"
    ],
    "eqeqeq": [
      "error",
      "smart"
    ],
    "id-blacklist": "off",
    "id-match": "off",
    "max-len": [
      "error",
      {
        "code": 100,
        "ignoreStrings": true
      }
    ],
    "no-eval": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2
      }
    ],
    "no-new-wrappers": "error",
    "no-underscore-dangle": "off",
    "no-var": "error",
    "one-var": [
      "warn",
      "never"
    ],
    "quote-props": [
      "error",
      "as-needed"
    ],
    "import/prefer-default-export": "warn",
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement"
    ],
    "no-await-in-loop": "off", // Sequelize with promises or async/await is broken; we need await in for loops
    "no-plusplus": [
      "error",
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "no-return-await": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "new-cap": "warn",
    "no-console": "error",
    "guard-for-in": "error",
    "consistent-return": "error",
    "no-loop-func": "error",
    "no-continue": "error",
    "import/no-unresolved": "error",
    "import/no-named-as-default": "error",
    "import/export": "error",
    "no-undef": "error",
    "no-return-assign": "error",
    "no-param-reassign": "error",
    "no-case-declarations": "error",
    "no-async-promise-executor": "error",
    "no-cond-assign": "error",
    "default-case": "error",
    "import/no-cycle": "warn",
    "valid-typeof": "error",
    "no-useless-escape": "error",
    "max-classes-per-file": "error",
    "no-useless-constructor": "error",
    "class-methods-use-this": "off",
    "no-unused-expressions": "warn",
    "no-throw-literal": "error",
    "prefer-promise-reject-errors": "error",
    "no-restricted-globals": "error",
    "import/no-duplicates": "error",
    "no-duplicate-imports": "error",
    "prefer-destructuring": [
      "error",
      {
        "object": true,
        "array": false
      }
    ],
    "no-useless-catch": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "no-new-func": "error",
    "radix": "error",
    "no-nested-ternary": "error",
    "array-callback-return": "error",
    "no-prototype-builtins": "error",
    "prefer-const": "error",
    "import/no-extraneous-dependencies": "error",
    "import/no-named-default": "error",
    "no-empty": "error",
    "no-multi-assign": "error",
    "global-require": "error",
    "import/extensions": "error",
    "import/no-mutable-exports": "error",
    "prefer-template": "error",
    "import/order": "warn",
    "import/newline-after-import": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "strict": "error",
    "prefer-object-spread": "error",
    "dot-notation": "error",
    "no-lonely-if": "error",
    "no-unneeded-ternary": "error",
    "spaced-comment": "error",
    "import/first": "error",
    "lines-around-directive": "error",
    "no-undef-init": "error",
    "no-extra-boolean-cast": "error",
    "no-useless-return": "error",
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "import/no-useless-path-segments": "error",
    "yoda": "error",
    "no-useless-computed-key": "error",
    "object-shorthand": "error",
    "no-trailing-spaces": "warn",
    "eol-last": "error",
    "operator-assignment": "error",
    "no-else-return": "error",
    "@typescript-eslint/semi": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/quotes": [
      "warn",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-use-before-define": "off"
  }
}